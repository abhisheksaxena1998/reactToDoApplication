{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","currentItem","key","text","items","handleSubmit","newItem","setState","handleReset","console","log","this","listItems","map","d","Fragment","type","className","value","placeholder","onChange","e","target","Date","now","onClick","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAuEeA,G,kNAlEbC,MAAQ,CAACC,YAAY,CACnBC,IAAI,GACJC,KAAK,IAELC,MAAO,CACL,CAAEF,IAAK,EAAGC,KAAM,UAChB,CAAED,IAAK,EAAGC,KAAM,UAChB,CAAED,IAAK,EAAGC,KAAM,UAChB,CAAED,IAAK,EAAGC,KAAM,Y,EAIpBE,aAAe,WACb,IAAMC,EAAU,EAAKN,MAAMC,YAC3B,GAAmB,KAAhBK,EAAQH,KAAW,CACpB,IAAMC,EAAK,sBAAO,EAAKJ,MAAMI,OAAlB,CAAyBE,IACtC,EAAKC,SAAS,CACZH,MAAOA,EACPH,YAAY,CACVE,KAAK,GACLD,IAAI,Q,EAMVM,YAAc,WAEZ,EAAKD,SAAS,CAAEH,MADF,M,uDAIN,IAAD,OACPK,QAAQC,IAAIC,KAAKX,MAAMI,OACvB,IAAMQ,EAAYD,KAAKX,MAAMI,MAAMS,KAAI,SAACC,GAAD,OAAO,6BAAiBA,EAAEX,MAAVW,EAAEZ,QACzD,OAAS,eAAC,IAAMa,SAAP,WAET,uBACMC,KAAK,OACLC,UAAU,QACVC,MAAQP,KAAKX,MAAMC,YAAYE,KAC/BgB,YAAY,aACZC,SAAU,SAACC,GACT,EAAKd,SAAS,CACZN,YAAY,CACVE,KAAMkB,EAAEC,OAAOJ,MACfhB,IAAKqB,KAAKC,SAGdf,QAAQC,IAAI,EAAKV,UAGrB,wBACEyB,QAASd,KAAKN,aACdY,UAAU,6BAFZ,sBAMA,wBAAQQ,QAASd,KAAKH,YAAtB,8BAEF,8BACCI,W,GA7DWc,cCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7f25695a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n\nclass App extends Component {\n  state = {currentItem:{\n    key:'',\n    text:''\n  },\n    items: [\n      { key: 1, text: 'task 1' },\n      { key: 2, text: 'task 2' },\n      { key: 3, text: 'task 3' },\n      { key: 4, text: 'task 4' },\n    ],\n  };\n\n  handleSubmit = () => {\n    const newItem = this.state.currentItem;\n    if(newItem.text !==\"\"){\n      const items = [...this.state.items, newItem];\n    this.setState({\n      items: items,\n      currentItem:{\n        text:'',\n        key:''\n      }\n    })\n    }\n  };\n  \n  handleReset = ()=>{\n    const items = []\n    this.setState({ items });\n  }\n\n  render() { \n    console.log(this.state.items)\n    const listItems = this.state.items.map((d) => <li key={d.key}>{d.text}</li>);\n    return ( <React.Fragment>\n\n    <input\n          type=\"text\"\n          className=\"input\"\n          value= {this.state.currentItem.text}\n          placeholder=\"Enter task\"\n          onChange={(e) => {\n            this.setState({\n              currentItem:{\n                text: e.target.value,\n                key: Date.now()\n              }\n            });\n            console.log(this.state);\n          }}\n        ></input>\n        <button\n          onClick={this.handleSubmit}\n          className=\"btn btn-primary btn-sm m-2\"\n        >\n          Add task\n        </button>\n        <button onClick={this.handleReset}>Mark all as done</button>\n\n      <div>\n      {listItems }\n      </div>\n      </React.Fragment> );\n  }\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}