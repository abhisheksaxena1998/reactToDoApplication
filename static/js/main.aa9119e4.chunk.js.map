{"version":3,"sources":["components/itemList.jsx","components/navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["ListItems","item","console","log","status","classes","this","props","items","listItems","map","className","type","getBadgeClasses","id","key","value","text","onChange","e","setUpdate","target","onClick","swal","deleteItem","markdoneItem","markincompleteItem","Component","NavBar","alt","src","height","loading","totalTasks","App","state","currentItem","handleSubmit","newItem","setState","length","filteredItems","filter","itemz","handleReset","navigator","vibrate","align","Fragment","placeholder","Date","now","checkComplete","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRA2EeA,G,qMAnEGC,GACdC,QAAQC,IAAI,WAAYF,EAAKG,QAC7B,IAAIC,EAAU,oBAAsBJ,EAAKG,OAKzC,OADAF,QAAQC,IAAIE,GACLA,I,+BAEC,IAAD,OACPH,QAAQC,IAAI,YAAaG,KAAKC,MAAMC,OACpC,IACMC,EADQH,KAAKC,MAAMC,MACDE,KAAI,SAACT,GAE3B,OADAC,QAAQC,IAAI,cAAeF,GAEzB,sBAAKU,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SACE,uBACEC,KAAK,OACLD,UAAW,EAAKE,gBAAgBZ,GAChCa,GAAIb,EAAKc,IACTC,MAAOf,EAAKgB,KACZC,SAAU,SAACC,GACT,EAAKZ,MAAMa,UAAUD,EAAEE,OAAOL,MAAOf,EAAKc,UAIhD,sBAAKJ,UAAU,eAAf,UACE,wBACEA,UAAU,yBACVW,QAAS,WACPC,IAAK,YAAa,kBAAmB,SACrC,EAAKhB,MAAMiB,WAAWvB,EAAKc,MAJ/B,2BASA,wBACEJ,UAAU,sBACVW,QAAS,WACPC,IAAK,SAAU,oBAAqB,WACpC,EAAKhB,MAAMkB,aAAaxB,IAJ5B,4BASA,wBACEU,UAAU,wBACVW,QAAS,WACPC,IAAK,YAAa,uBAAwB,QAC1C,EAAKhB,MAAMmB,mBAAmBzB,IAJlC,uCA/BuBA,EAAKc,QA4CpC,OACE,8BACE,+BAAON,U,GA9DSkB,cCsBTC,EAxBA,SAACrB,GACd,OACE,qBAAKI,UAAU,mDAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,eAAf,UACE,qBACEkB,IAAI,GACJC,IAAI,kGACJC,OAAO,KACPC,QAAQ,SAEV,mCACG,KADH,oBAEoB,OAEpB,sBAAMrB,UAAU,mCAAhB,SACGJ,EAAM0B,qBC2JJC,E,4MArKbC,MAAQ,CAACC,YAAY,CACnBrB,IAAI,GACJE,KAAK,GACLb,OAAO,IAEPI,MAAO,CACL,CAAEO,IAAK,EAAGE,KAAM,mBAAoBb,OAAQ,aAC5C,CAAEW,IAAK,EAAGE,KAAM,4BAA6Bb,OAAQ,aACrD,CAAEW,IAAK,EAAGE,KAAM,mBAAoBb,OAAQ,kB,EAgBhDiC,aAAe,WAEb,IAAMC,EAAU,EAAKH,MAAMC,YAC3B,GAAmB,KAAhBE,EAAQrB,KAAW,CACpBM,IACE,UACA,gBACA,WAEF,IAAMf,EAAK,sBAAO,EAAK2B,MAAM3B,OAAlB,CAAyB8B,IACtC,EAAKC,SAAS,CACZ/B,MAAOA,EACP4B,YAAY,CACVnB,KAAK,GACLF,IAAI,GACJX,OAAQ,Q,EAMd6B,WAAW,WACT,OAAO,EAAK1B,MAAM4B,MAAM3B,MAAMgC,Q,EAGhChB,WAAW,SAACT,GACV,IAAM0B,EAAe,EAAKN,MAAM3B,MAAMkC,QAAO,SAAAzC,GAAI,OAC/CA,EAAKc,MAAMA,KACb,EAAKwB,SAAS,CACZ/B,MAAOiC,K,EAGThB,aAAa,SAACxB,GACZ,IAAMwC,EAAe,EAAKN,MAAM3B,MAAMkC,QAAO,SAAAC,GAAK,OAChDA,EAAM5B,MAAMd,EAAKc,OACbuB,EAAQ,CACVvB,IAAId,EAAKc,IACTE,KAAKhB,EAAKgB,KACVb,OAAO,aACHI,EAAK,sBAAOiC,GAAP,CAAsBH,IAEjC,EAAKC,SAAS,CACZ/B,MAAOA,EACP4B,YAAY,CACVnB,KAAK,GACLF,IAAI,GACJX,OAAQ,MAGZF,QAAQC,IAAI,gBAAgBF,I,EAGhCyB,mBAAmB,SAACzB,GAClB,IAAMwC,EAAe,EAAKN,MAAM3B,MAAMkC,QAAO,SAAAC,GAAK,OAChDA,EAAM5B,MAAMd,EAAKc,OACbuB,EAAQ,CACVvB,IAAId,EAAKc,IACTE,KAAKhB,EAAKgB,KACVb,OAAO,gBACHI,EAAK,sBAAOiC,GAAP,CAAsBH,IAEjC,EAAKC,SAAS,CACZ/B,MAAOA,EACP4B,YAAY,CACVnB,KAAK,GACLF,IAAI,GACJX,OAAQ,MAGZF,QAAQC,IAAI,gBAAgBF,I,EAGlCmB,UAAU,SAACH,EAAKF,GACdb,QAAQC,IAAI,SAAS,EAAKgC,MAAM3B,OAChC,IAAMA,EAAQ,EAAK2B,MAAM3B,MACzBA,EAAME,KAAI,SAAAT,GAIR,OAHGA,EAAKc,MAAMA,IACZd,EAAKgB,KAAMA,GAEN,MAET,EAAKsB,SAAS,CACZ/B,MAAOA,K,EAGXoC,YAAc,WACZC,UAAUC,QAAQ,KAClBvB,IACE,cACA,uBACA,WAGF,EAAKgB,SAAS,CAAE/B,MADF,M,8DAvGd,OAA8B,IAA1BF,KAAK6B,MAAM3B,MAAMgC,OAAqB,qBAAK7B,UAAU,WAAf,SACxC,qBAAKA,UAAU,gBAAgBkB,IAAI,GAAGkB,MAAM,SAASjB,IAAI,0GAG/C,qBAAKnB,UAAU,WAAf,SACV,qBAAKA,UAAU,gBAAgBkB,IAAI,GAAGkB,MAAM,SAASjB,IAAI,uG,+BAsGnD,IAAD,OAEP,OADA5B,QAAQC,IAAIG,KAAK6B,MAAM3B,OACd,eAAC,IAAMwC,SAAP,WACT,cAAC,EAAD,CAAQf,WAAY3B,KAAK6B,MAAM3B,MAAMgC,SACrC,qBAAK7B,UAAU,sBAAf,SACA,sBAAKA,UAAU,OAAf,UACF,sBAAKA,UAAU,YAAf,UAEE,uBACMC,KAAK,OACLD,UAAU,eACVK,MAAQV,KAAK6B,MAAMC,YAAYnB,KAC/BgC,YAAY,cACZ/B,SAAU,SAACC,GACT,EAAKoB,SAAS,CACZH,YAAY,CACVnB,KAAME,EAAEE,OAAOL,MACfD,IAAKmC,KAAKC,MACV/C,OAAO,kBAGXF,QAAQC,IAAI,EAAKgC,UAGrB,wBACAvB,KAAK,SAASD,UAAU,8CACtBW,QAAShB,KAAK+B,aAFhB,sBAMA,wBAAQ1B,UAAU,8CAA8CW,QAAShB,KAAKsC,YAA9E,iCAECtC,KAAK8C,qBAIR,sBAAMzC,UAAU,YAAhB,SACE,cAAE,EAAF,CAAYH,MAAOF,KAAK6B,MAAM3B,MAAOJ,OAAQE,KAAK6B,MAAM3B,MAAMJ,OAAQqB,aAAcnB,KAAKmB,aAAcC,mBAAoBpB,KAAKoB,mBAAoBN,UAAWd,KAAKc,UAAWI,WAAYlB,KAAKkB,sB,GA9JtLG,aCEH0B,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa9119e4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport \"./itemList.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nclass ListItems extends Component {\r\n  getBadgeClasses(item) {\r\n    console.log(\"new list\", item.status);\r\n    let classes = \"form-control-new-\" + item.status;\r\n\r\n    /* classes +=\r\n      this.props.items.status === \"completed\" ? \"completed\" : \"notcompleted\"; */\r\n    console.log(classes);\r\n    return classes;\r\n  }\r\n  render() {\r\n    console.log(\"Item list\", this.props.items);\r\n    const items = this.props.items;\r\n    const listItems = items.map((item) => {\r\n      console.log(\"single item\", item);\r\n      return (\r\n        <div className=\"list\" key={item.key}>\r\n          <div className=\"newRow\">\r\n            <input\r\n              type=\"text\"\r\n              className={this.getBadgeClasses(item)}\r\n              id={item.key}\r\n              value={item.text}\r\n              onChange={(e) => {\r\n                this.props.setUpdate(e.target.value, item.key);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"newButtonRow\">\r\n            <button\r\n              className=\"btn btn-warning btn-sm\"\r\n              onClick={() => {\r\n                swal(\"Deleted !\", \"Task deleted :)\", \"error\");\r\n                this.props.deleteItem(item.key);\r\n              }}\r\n            >\r\n              Delete Task !\r\n            </button>\r\n            <button\r\n              className=\"btn btn-info btn-sm\"\r\n              onClick={() => {\r\n                swal(\"Done !\", \"Marked as done :)\", \"success\");\r\n                this.props.markdoneItem(item);\r\n              }}\r\n            >\r\n              Mark as Done !\r\n            </button>\r\n            <button\r\n              className=\"btn btn-danger btn-sm\"\r\n              onClick={() => {\r\n                swal(\"Pending !\", \"Marked as pending :)\", \"info\");\r\n                this.props.markincompleteItem(item);\r\n              }}\r\n            >\r\n              Mark as incomplete !\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <span>{listItems}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListItems;\r\n","import React from \"react\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nconst NavBar = (props) => {\r\n  return (\r\n    <nav className=\"heavy-rain-gradient navbar navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"navbar-brand\">\r\n          <img\r\n            alt=\"\"\r\n            src=\"https://raw.githubusercontent.com/abhisheksaxena1998/reactToDoApplication/main/src/og-image.png\"\r\n            height=\"60\"\r\n            loading=\"lazy\"\r\n          />\r\n          <strong>\r\n            {\"  \"}\r\n            To-Do Application{\" \"}\r\n          </strong>\r\n          <span className=\"badge badge-pill badge-secondary\">\r\n            {props.totalTasks}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport swal from \"sweetalert\";\nimport ListItems from \"./components/itemList\"\nimport NavBar from \"./components/navbar\"\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\n\nclass App extends Component {\n  state = {currentItem:{\n    key:'',\n    text:'',\n    status:''\n  },\n    items: [\n      { key: 1, text: 'Learn JavaScript', status: \"completed\" },\n      { key: 4, text: 'Do cool projects in React', status: \"completed\"  },\n      { key: 9, text: 'Do cool projects', status: \"notcompleted\"  },\n    ],\n  };\n\n  checkComplete(){\n    if (this.state.items.length===0) {return (<div className=\"imagebox\">\n      <img className=\"img-completed\" alt=\"\" align=\"center\" src=\"https://raw.githubusercontent.com/abhisheksaxena1998/reactToDoApplication/main/public/completed.png\"></img>\n      </div>)}\n      else{\n        return (<div className=\"imagebox\">\n      <img className=\"img-completed\" alt=\"\" align=\"center\" src=\"https://raw.githubusercontent.com/abhisheksaxena1998/reactToDoApplication/main/public/todo.png\"></img>\n      </div>)\n      }\n    \n    }\n\n  handleSubmit = () => {\n    \n    const newItem = this.state.currentItem;\n    if(newItem.text !==\"\"){\n      swal(\n        'Added !',\n        'To Do Saved !',\n        'success'\n                 )\n      const items = [...this.state.items, newItem];\n    this.setState({\n      items: items,\n      currentItem:{\n        text:'',\n        key:'',\n        status: \"\"\n      }\n    })\n    }\n  };\n\n  totalTasks=()=>{\n    return this.props.state.items.length\n  }\n\n  deleteItem=(key)=>{\n    const filteredItems= this.state.items.filter(item =>\n      item.key!==key);\n    this.setState({\n      items: filteredItems\n    })}\n\n    markdoneItem=(item)=>{\n      const filteredItems= this.state.items.filter(itemz =>\n        itemz.key!==item.key);\n        var newItem={\n          key:item.key,\n          text:item.text,\n          status:\"completed\"}\n        const items = [...filteredItems, newItem];\n\n        this.setState({\n          items: items,\n          currentItem:{\n            text:'',\n            key:'',\n            status: \"\"\n          }\n        })\n        console.log(\"done filtered\",item)\n    }\n\n    markincompleteItem=(item)=>{\n      const filteredItems= this.state.items.filter(itemz =>\n        itemz.key!==item.key);\n        var newItem={\n          key:item.key,\n          text:item.text,\n          status:\"notcompleted\"}\n        const items = [...filteredItems, newItem];\n\n        this.setState({\n          items: items,\n          currentItem:{\n            text:'',\n            key:'',\n            status: \"\"\n          }\n        })\n        console.log(\"done filtered\",item)\n    }\n\n  setUpdate=(text,key)=>{\n    console.log(\"items:\"+this.state.items);\n    const items = this.state.items;\n    items.map(item=>{      \n      if(item.key===key){\n        item.text= text;\n      }\n      return \"\";\n    })\n    this.setState({\n      items: items\n    })  \n  }\n  handleReset = ()=>{\n    navigator.vibrate(100);\n    swal(\n      'Completed !',\n      'Marked all as done !',\n      'warning'\n               )\n    const items = []\n    this.setState({ items });\n  }\n\n  render() { \n    console.log(this.state.items);\n    return ( <React.Fragment>\n    <NavBar totalTasks={this.state.items.length}/>\n    <div className=\"container-for-tasks\">\n    <div className=\"card\">\n  <div className=\"card-body\">\n    \n    <input\n          type=\"text\"\n          className=\"form-control\"\n          value= {this.state.currentItem.text}\n          placeholder=\"Enter tasks\"\n          onChange={(e) => {\n            this.setState({\n              currentItem:{\n                text: e.target.value,\n                key: Date.now(),\n                status:\"notcompleted\"\n              }\n            });\n            console.log(this.state);\n          }}\n        ></input>\n        <button\n        type=\"button\" className=\"btn blue-gradient waves-effect waves-light \"\n          onClick={this.handleSubmit}\n        >\n          Add task\n        </button> \n        <button className=\"btn blue-gradient waves-effect waves-light \" onClick={this.handleReset}>Mark all as done</button>\n        </div>\n        {this.checkComplete()}\n        </div></div>\n        \n       \n      <main className=\"container\">\n        < ListItems items={this.state.items} status={this.state.items.status} markdoneItem={this.markdoneItem} markincompleteItem={this.markincompleteItem} setUpdate={this.setUpdate} deleteItem={this.deleteItem}\n        />\n        </main>\n        \n      </React.Fragment> );\n  }\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}